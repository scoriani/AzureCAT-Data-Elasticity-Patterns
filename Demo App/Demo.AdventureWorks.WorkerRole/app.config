<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="RetryPolicyConfiguration" type="Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.Configuration.RetryPolicyConfigurationSettings, Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.Configuration, Version=6.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="typeRegistrationProvidersConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Common.Configuration.TypeRegistrationProvidersConfigurationSection, Microsoft.Practices.EnterpriseLibrary.Common, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection,Microsoft.Practices.Unity.Configuration" />
    <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />
    </sectionGroup>
  </configSections>
  <RetryPolicyConfiguration defaultRetryStrategy="Incremental Retry Strategy">
    <incremental name="Incremental Retry Strategy" />
    <fixedInterval name="Fixed Interval Retry Strategy" />
    <exponentialBackoff name="Exponential Backoff Retry Strategy" />
  </RetryPolicyConfiguration>
  <typeRegistrationProvidersConfiguration>
    <clear />
    <add name="Caching" sectionName="cachingConfiguration" />
    <add name="Cryptography" sectionName="securityCryptographyConfiguration" />
    <add name="Exception Handling" sectionName="exceptionHandling" />
    <add name="Instrumentation" sectionName="instrumentationConfiguration" />
    <add name="Logging" sectionName="loggingConfiguration" />
    <add name="Policy Injection" sectionName="policyInjection" />
    <add name="Security" sectionName="securityConfiguration" />
    <add name="Data Access" providerType="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSyntheticConfigSettings, Microsoft.Practices.EnterpriseLibrary.Data" />
    <add name="Validation" providerType="Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.ValidationTypeRegistrationProvider, Microsoft.Practices.EnterpriseLibrary.Validation" />
    <add name="RetryPolicyConfiguration" sectionName="RetryPolicyConfiguration" />
  </typeRegistrationProvidersConfiguration>
  <connectionStrings>
    <add name="AWSales-Template" connectionString="Data Source=SHARD_SERVER;Initial Catalog=SHARD_CATALOG;User ID=SHARD_USER;Password=SHARD_PASS;Connection Timeout=30" />
    <add name="AzureStorage" connectionString="UseDevelopmentStorage=true" />
    <!--<add name="AzureStorage" connectionString="DefaultEndpointsProtocol=http;AccountName=mystorage;AccountKey=mystoragekey" />-->
    <add name="AwMainReferenceData" connectionString="Data Source=(localdb)\V11.0;Initial Catalog=AWMain;Integrated Security=SSPI;Connection Timeout=30" />
    <!--<add name="AwMainReferenceData" connectionString="Server=tcp:mydatabase.database.windows.net,1433;Database=AWMain;Integrated Security=SSPI;Trusted_Connection=False;Encrypt=True;Connection Timeout=30;" />-->
  <add name="[MyShardSetName]-Template" connectionString="Data Source=SHARD_SERVER;Initial Catalog=SHARD_CATALOG;User ID=SHARD_USER;Password=SHARD_PASS;Connection Timeout=30" /></connectionStrings>
  <appSettings>
    <!-- Use by Unit Tests -->
    <add key="TestSQLServer" value="(localdb)\V11.0" />
    <!--<add key="TestSQLServer" value="mydatabase.database.windows.net" />-->
    <!-- Set to true to enable Azure Caching.  Leave false for local testing -->
    <add key="ShouldUseAzureCache" value="false" />
    <add key="RedisConnectionString" value="cachename.redis.cache.windows.net,allowAdmin=true,ssl=true,password=mypasssword" />
    <!-- controls the publishing threads for parallelism in the Data Elasticity system-->
    <!-- used when the operations are executed directly vs. from one or more worker roles-->
    <!-- 0  - "use default" which is to use the number of processors -->
    <!-- 1  - single threaded -->
    <!-- 2 ..16 - use the number of threads specified -->
    <add key="PublishingThreads" value="1" />

    <!-- Set to a millisecond value to set a delay time between shardlet moves from the queue -->
    <add key="ShardletMoveDelay" value="0" />

    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>
  
  <!-- 
  Data Elasticity utilizes the Unity library for configuring the implementation(s) of the various
  Supporting interfaces.  This Unity section defines the interfaces as well as templates for
  registering the implementations in the Unity container.
  
  See: http://unity.codeplex.com/ 
  -->
  <!-- Unity Service Location Configuration --><!-- 
  Data Elasticity utilizes the Unity library for configuring the implementation(s) of the various
  Supporting interfaces.  This Unity section defines the interfaces as well as templates for
  registering the implementations in the Unity container.
  
  See: http://unity.codeplex.com/
  --><unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <typeAliases>
      <!-- Data Elasticity Interfaces -->
      
      <!-- Interfaces -->
      <!--Configuration interfaces-->
      <typeAlias alias="ISettingsRepository" type="Microsoft.AzureCat.Patterns.DataElasticity.Interfaces.ISettingsRepository, Microsoft.AzureCat.Patterns.DataElasticity" />
      <typeAlias alias="IConfigRepository" type="Microsoft.AzureCat.Patterns.DataElasticity.Interfaces.IConfigRepository, Microsoft.AzureCat.Patterns.DataElasticity" />
      <typeAlias alias="IShardSetDriver" type="Microsoft.AzureCat.Patterns.DataElasticity.Interfaces.IShardSetDriver, Microsoft.AzureCat.Patterns.DataElasticity" />
      <typeAlias alias="IShardSetConnectionDriver" type="Microsoft.AzureCat.Patterns.DataElasticity.Interfaces.IShardSetConnectionDriver, Microsoft.AzureCat.Patterns.DataElasticity" />
      <typeAlias alias="IShardSetActionQueue" type="Microsoft.AzureCat.Patterns.DataElasticity.Interfaces.IShardSetActionQueue, Microsoft.AzureCat.Patterns.DataElasticity" />
    
      <!-- Data Elasticity Implementations -->
      
      <typeAlias alias="SqlConfigRepository" type="Microsoft.AzureCat.Patterns.DataElasticity.SQLAzure.SQLConfigRepository, Microsoft.AzureCat.Patterns.DataElasticity.SQLAzure" />
      <typeAlias alias="AzureShardSetActionQueue" type="Microsoft.AzureCat.Patterns.DataElasticity.AzureTableStore.AzureShardSetActionQueue, Microsoft.AzureCat.Patterns.DataElasticity.AzureTableStore" />
      <typeAlias alias="AzureShardSetConnectionDriver" type="Microsoft.AzureCat.Patterns.DataElasticity.AzureTableStore.AzureShardSetConnectionDriver, Microsoft.AzureCat.Patterns.DataElasticity.AzureTableStore" />
      <!-- Shard Set Driver Implementation -->
      <typeAlias alias="AwSalesShardSetDriver" type="Microsoft.AzureCat.Patterns.DataElasticity.Demo.AdventureWorks.AwSalesShardSetDriver, Microsoft.AzureCat.Patterns.DataElasticity.Demo.AdventureWorks" />

      <!--
      <typeAlias alias="ISettingsRepository" type="Microsoft.AzureCat.Patterns.Data.Elasticity.Interfaces.ISettingsRepository, Microsoft.AzureCat.Patterns.Data.Elasticity, Version=1.0.0.0, Culture=neutral" />
      <typeAlias alias="IConfigRepository" type="Microsoft.AzureCat.Patterns.Data.Elasticity.Interfaces.IConfigRepository, Microsoft.AzureCat.Patterns.Data.Elasticity, Version=1.0.0.0, Culture=neutral" />
      <typeAlias alias="IShardSetConnectionDriver" type="Microsoft.AzureCat.Patterns.Data.Elasticity.Interfaces.IShardSetConnectionDriver, Microsoft.AzureCat.Patterns.Data.Elasticity, Version=1.0.0.0, Culture=neutral" />
      <typeAlias alias="IShardSetDriver" type="Microsoft.AzureCat.Patterns.Data.Elasticity.Interfaces.IShardSetDriver, Microsoft.AzureCat.Patterns.Data.Elasticity, Version=1.0.0.0, Culture=neutral" />
      <typeAlias alias="IShardSetActionQueue" type="Microsoft.AzureCat.Patterns.Data.Elasticity.Interfaces.IShardSetActionQueue, Microsoft.AzureCat.Patterns.Data.Elasticity, Version=1.0.0.0, Culture=neutral" />
      -->

      <!-- Implementations -->
      <!--
      <typeAlias alias="[MySettingsImplementation]" type="[MySettingsImplementation], [MySettingsImplementationLibrary]" />
      <typeAlias alias="[MyConfigurationImplementation]" type="[MyConfigurationImplementation], [MyConfigurationImplementationLibrary]" />
      <typeAlias alias="[MyShardSetActionQueueImplementation]" type="[MyShardSetActionQueueImplementation], [MyShardSetActionQueueImplementationLibrary]" />
      <typeAlias alias="[MyShardSetConnectionDriverImplementation]" type="[MyShardSetConnectionDriverImplementation], [MyShardSetConnectionDriverImplementationLibrary]" />
      <typeAlias alias="[MyShardSetDriverImplementation]" type="[MyShardSetDriverImplementation], [MyShardSetConnectionImplementationLibrary]" />
      -->
    </typeAliases>
    <container>
      <!-- Register Data Elasticity Settings Provider -->
      <register type="ISettingsRepository" mapTo="SqlConfigRepository">
        <lifetime type="singleton" />
        <constructor>
          <param name="connectionString">
            <!-- settings connection string -->
            <value value="Data Source=(localdb)\V11.0;Initial Catalog=AWMain;Integrated Security=SSPI;Connection Timeout=30" />
            <!--<value value="Server=tcp:mydatabase.database.windows.net,1433;Database=AWMain;Integrated Security=SSPI;Trusted_Connection=False;Encrypt=True;Connection Timeout=30;" />-->
          </param>
        </constructor>
      </register>
      <!-- Register Data Elasticity Configuration Provider -->
      <register type="IConfigRepository" mapTo="SqlConfigRepository">
        <lifetime type="singleton" />
        <constructor>
          <param name="connectionString">
            <!-- configuration repository connection string -->
            <value value="Data Source=(localdb)\V11.0;Initial Catalog=AWMain;Integrated Security=SSPI;Connection Timeout=30" />
            <!--<value value="Server=tcp:mydatabase.database.windows.net,1433;Database=AWMain;Integrated Security=SSPI;Trusted_Connection=False;Encrypt=True;Connection Timeout=30;" />-->
          </param>
        </constructor>
      </register>
      <!-- Register Data Elasticity Shard Set Action Queue provider -->
      <register type="IShardSetActionQueue" mapTo="AzureShardSetActionQueue" />
      <!-- Register Data Elasticity Shard Set Driver for AwSales -->
      <register type="IShardSetDriver" mapTo="AwSalesShardSetDriver" name="AWSales" />
      <!-- Register Data Elasticity Shard Set Connection Driver for AwSales -->
      <register type="IShardSetConnectionDriver" mapTo="AzureShardSetConnectionDriver" name="AWSales" />
    <!-- Registrations -->
      <!--
      <register type="ISettingsRepository" mapTo="[MySettingsImplementation]" />
      <register type="IConfigRepository" mapTo="[MyConfigurationImplementation]" />
      <register type="IShardSetActionQueue" mapTo="[MyShardSetActionQueueImplementation]" />
      <register type="IShardSetConnectionDriver" mapTo="[MyShardSetConnectionDriverImplementation]" name="[MyShardSetName]" />
      <register type="IShardSetDriver" mapTo="[MyShardSetDriverImplementation]" name="[MyShardSetName]" />
      --></container>
  </unity>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v11.0" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.OData" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.6.1.0" newVersion="5.6.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.WindowsAzure.Storage" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.1.0" newVersion="4.0.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="EntityFramework" publicKeyToken="b77a5c561934e089" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Common.Logging" publicKeyToken="af08829b84f0328e" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.0.0" newVersion="2.2.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.WindowsAzure.Diagnostics" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.0.0" newVersion="2.2.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.Services.Client" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.6.1.0" newVersion="5.6.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.Edm" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.6.1.0" newVersion="5.6.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.SqlServer.TransactSql" publicKeyToken="89845dcd8080cc91" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-12.0.0.0" newVersion="12.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.Tools.Components" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-12.0.0.0" newVersion="12.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <!-- Common Configuration -->
  <!-- 
  Data Elasticity utilizes the Common Infrastructure Logging Library to abstract the logging framework.  The
  default configuration logs to the console; replace this configuration with the logging framework
  for your project.
    
  See: http://netcommon.sourceforge.net/ for supported frameworks and instructions.
  -->
  <common>
    <logging>
      <factoryAdapter type="Common.Logging.Simple.ConsoleOutLoggerFactoryAdapter, Common.Logging">
        <arg key="level" value="DEBUG" />
        <arg key="showLogName" value="true" />
        <arg key="showDataTime" value="true" />
        <arg key="dateTimeFormat" value="yyyy/MM/dd HH:mm:ss:fff" />
      </factoryAdapter>
    </logging>
  </common>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
</configuration>